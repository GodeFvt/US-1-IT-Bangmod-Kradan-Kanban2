services:
  proxy:
    container_name: us1-proxy
    image: nginx:alpine
    configs:
      - source: proxyPublic_config
        target: /etc/nginx/conf.d/public.conf
      - source: proxyPrivate_config
        target: /etc/nginx/conf.d/private.conf
    depends_on:
      - fe
      - api
    networks:
      - taskproj-net
    ports:
      - "80:80"
    restart: unless-stopped

  fe:
    container_name: us1-frontend
    image: frontend:v2
    build:
      context: frontend
    networks:
      taskproj-net:
        aliases:
          - frontend
    restart: unless-stopped

  api:
    container_name: us1-backend
    image: backend:v2
    environment:
      - TASKBOARD_DB_USER=${TB_DB_USER}
      - TASKBOARD_DB_PASSWORD=${TB_DB_PASSWORD}
      - TASKBOARD_DB_URL=${TB_DB_URL}
      - ACCOUNT_DB_USER=${AC_DB_USER}
      - ACCOUNT_DB_PASSWORD=${AC_DB_PASSWORD}
      - ACCOUNT_DB_URL=${AC_DB_URL}
      - JWT_SECRET=${SECRET}
      - JWT_SECRET_REFRESH=${SECRET_REFRESH}
      - JWT_ISSUER=${ISSUER}
    build:
      context: backend
    depends_on:
      db:
        condition: service_healthy
    networks:
      mysql-net:
      taskproj-net:
        aliases:
          - backend
    restart: unless-stopped

  db:
    container_name: us1-database
    env_file: ../env.list
    image: mysql/mysql-server
    build:
      context: database
    volumes:
      - db-vol:/var/lib/mysql
    networks:
      mysql-net:
        aliases:
          - database
    restart: unless-stopped

configs:
  proxyPrivate_config:
    file: proxy/private.conf
  proxyPublic_config:
    file: proxy/public.conf

volumes:
  db-vol:

networks:
  mysql-net:
  taskproj-net:
